//------------------------------------------------------------------------------
// <auto-generated>
//     Este código se generó a partir de una plantilla.
//
//     Los cambios manuales en este archivo pueden causar un comportamiento inesperado de la aplicación.
//     Los cambios manuales en este archivo se sobrescribirán si se regenera el código.
// </auto-generated>
//------------------------------------------------------------------------------

namespace prueba1.Models
{
    using System;
    using System.Data.Entity;
    using System.Data.Entity.Infrastructure;
    using System.Data.Entity.Core.Objects;
    using System.Linq;
    
    public partial class pruebillaEntities : DbContext
    {
        public pruebillaEntities()
            : base("name=pruebillaEntities")
        {
        }
    
        protected override void OnModelCreating(DbModelBuilder modelBuilder)
        {
            throw new UnintentionalCodeFirstException();
        }
    
        public virtual DbSet<cursores> cursores { get; set; }
    
        public virtual ObjectResult<string> celdas(Nullable<int> dias, Nullable<int> valor1, Nullable<int> valor2, Nullable<int> valor3, Nullable<int> valor4, Nullable<int> valor5, Nullable<int> valor6, Nullable<int> valor7, Nullable<int> valor8)
        {
            var diasParameter = dias.HasValue ?
                new ObjectParameter("dias", dias) :
                new ObjectParameter("dias", typeof(int));
    
            var valor1Parameter = valor1.HasValue ?
                new ObjectParameter("valor1", valor1) :
                new ObjectParameter("valor1", typeof(int));
    
            var valor2Parameter = valor2.HasValue ?
                new ObjectParameter("valor2", valor2) :
                new ObjectParameter("valor2", typeof(int));
    
            var valor3Parameter = valor3.HasValue ?
                new ObjectParameter("valor3", valor3) :
                new ObjectParameter("valor3", typeof(int));
    
            var valor4Parameter = valor4.HasValue ?
                new ObjectParameter("valor4", valor4) :
                new ObjectParameter("valor4", typeof(int));
    
            var valor5Parameter = valor5.HasValue ?
                new ObjectParameter("valor5", valor5) :
                new ObjectParameter("valor5", typeof(int));
    
            var valor6Parameter = valor6.HasValue ?
                new ObjectParameter("valor6", valor6) :
                new ObjectParameter("valor6", typeof(int));
    
            var valor7Parameter = valor7.HasValue ?
                new ObjectParameter("valor7", valor7) :
                new ObjectParameter("valor7", typeof(int));
    
            var valor8Parameter = valor8.HasValue ?
                new ObjectParameter("valor8", valor8) :
                new ObjectParameter("valor8", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<string>("celdas", diasParameter, valor1Parameter, valor2Parameter, valor3Parameter, valor4Parameter, valor5Parameter, valor6Parameter, valor7Parameter, valor8Parameter);
        }
    
        public virtual int celdasInsertar(Nullable<int> valor1, Nullable<int> valor2, Nullable<int> valor3, Nullable<int> valor4, Nullable<int> valor5, Nullable<int> valor6, Nullable<int> valor7, Nullable<int> valor8, string accion)
        {
            var valor1Parameter = valor1.HasValue ?
                new ObjectParameter("valor1", valor1) :
                new ObjectParameter("valor1", typeof(int));
    
            var valor2Parameter = valor2.HasValue ?
                new ObjectParameter("valor2", valor2) :
                new ObjectParameter("valor2", typeof(int));
    
            var valor3Parameter = valor3.HasValue ?
                new ObjectParameter("valor3", valor3) :
                new ObjectParameter("valor3", typeof(int));
    
            var valor4Parameter = valor4.HasValue ?
                new ObjectParameter("valor4", valor4) :
                new ObjectParameter("valor4", typeof(int));
    
            var valor5Parameter = valor5.HasValue ?
                new ObjectParameter("valor5", valor5) :
                new ObjectParameter("valor5", typeof(int));
    
            var valor6Parameter = valor6.HasValue ?
                new ObjectParameter("valor6", valor6) :
                new ObjectParameter("valor6", typeof(int));
    
            var valor7Parameter = valor7.HasValue ?
                new ObjectParameter("valor7", valor7) :
                new ObjectParameter("valor7", typeof(int));
    
            var valor8Parameter = valor8.HasValue ?
                new ObjectParameter("valor8", valor8) :
                new ObjectParameter("valor8", typeof(int));
    
            var accionParameter = accion != null ?
                new ObjectParameter("accion", accion) :
                new ObjectParameter("accion", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("celdasInsertar", valor1Parameter, valor2Parameter, valor3Parameter, valor4Parameter, valor5Parameter, valor6Parameter, valor7Parameter, valor8Parameter, accionParameter);
        }
    
        public virtual int celdasInsertarPorDias()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("celdasInsertarPorDias");
        }
    }
}
